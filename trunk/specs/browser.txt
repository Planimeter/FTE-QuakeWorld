<object type="text/x-quaketvident" classid="clsid:7d676c9f-fb84-40b6-b3ff-e10831557eeb">
	<param name="paramname" value="paramvalue">
	<object type="text/x-quaketvident">
		<param name="paramname" value="paramvalue">

		Insert your 'no-plugin' text here. Be sure to include links to download a copy of one.

	</object>
</object>




Two objects. Yes, I know. Evil. But yeah. Firefox will ignore any objects with a classid, and internet exploder won't have a clue what it is if it doesn't have a classid. bah.
Yes, you need to specify the params twice.
You probably want to name them too.

Any supported param is also supported as a field usable from javascript. There's no distinction between them.

Supported fields/params.
bool running: true if active. false if its not running. setting this field will start up quake or shut it down.

string startserver: the server that will be used when the engine starts up.
string server: the current server. if not running, maps to startserver instead. (server=foo; running = true; will result in the plugin going to that server in all cases)
string playername: the name cvar. requires running.
string skin: the string cvar. requires running.
string team: the team cvar. requires running.
string topcolor: the topcolor cvar. requires running
string bottomcolor: the topcolor cvar. requires running
string password: the password cvar. requires running
not supported. string spectator: the spectator cvar. requires running

string mapsrc: the cl_download_mapsrc cvar. Should be empty or a url like: http://bigfoot.morphos-team.net/misc/quakemaps/
	if set, its a url that contains a load of bsp files that can be downloaded via http instead of grabbing them off the server.

string fullscreen: vid_fullscreen.

string datadownload: specifies a url to obtain mod data from.
	Can contain multiple space-separated entries.
	Each entry must have a pak or pk3 file name, followed by a colon, followed by a url that contains a zip file.
	Each file should be moddir/pakname.pak for instance.
string game: specifies the actual game+mod to use.
	The first entry can be:
		quake/q1/qw: quake1
		quake2/q2: quake2
		quake3/q3: quake3
		halflife/hl: half-life (not really supported, but you may have a TC mod that just wants halflife maps)
		hexen2/h2: hexen2
		nexuiz: nexuiz... moving target. sorry.
		Any of the above will tell the plugin to hunt for the given game on the user's hard drive, and to then use that as a base dir, with the relevent game's basedir(s) loaded.
		Any other option will be taken as only that base gamedir in an obscure place in the user's profile.
	Additional gamedirs can be named, separated by spaces. These are additional mod dirs which will always be loaded despite the user's/server's choice of gamedir.

string curver: read only. Returns the current version of the plugin.
string availver: Tells the plugin what the most recent version of the plugin is. Basically it will cause the plugin to show a warning whenever its not running.
	
string splash: This is a url to a jpeg/png image to be shown when the plugin is not active.

string stream: when set, (including via stream="foo";running=true;) this will direct the plugin to begin playing a qtv stream.
string map: when set and running, the plugin will change map and use its own server. overrides startserver when not running.



stuff that may be supported at some point
connType: describes how the plugin should connect. join/qtv/observe/map

join: server? gah
